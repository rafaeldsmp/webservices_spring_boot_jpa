package com.github.example.resources;

import java.net.URI;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;

import com.github.example.entities.User;
import com.github.example.services.UserService;

@RestController
@RequestMapping(value = "/users") //controlador rest que tem operações users 
public class UserResource { //essa classe irá disponibilizar o recurso web correspondente a entidade user

	@Autowired
	private UserService service;
	
	@GetMapping
	public ResponseEntity <List<User>> findAll(){
		List<User> list = service.findAll();
		return ResponseEntity.ok().body(list);
	}
	
	@GetMapping(value = "/{id}") // Ela é usada para extrair valores de variáveis de URI e usá-los como parâmetros em métodos de controladores.
	public ResponseEntity<User> findById(@PathVariable Long id){ ///pathvariable é para o spring aceitar o id e considerar como paramentro que vai chegar na url
		User obj = service.findById(id);
		return ResponseEntity.ok().body(obj);
	}
	
	@PostMapping
	public ResponseEntity<User> insert(@RequestBody User obj){ //requestbody  anotação usada para indicar que o método de um controlador espera um objeto no corpo (body) da requisição HTTP.
		obj = service.insert(obj);
		//return ResponseEntity.ok().body(obj); assim iria funcionar mas ficaria com ok 200 e o ideal é 201 de criação
		URI uri = ServletUriComponentsBuilder.fromCurrentRequest().path("/{id}")
				.buildAndExpand(obj.getId()).toUri(); //forma de gerar endereçop uri
		return ResponseEntity.created(uri).body(obj); //o padrão created espera uma URI
	}
}
