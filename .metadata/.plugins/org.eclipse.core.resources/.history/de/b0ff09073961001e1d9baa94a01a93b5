package com.github.example.entities;

import java.io.Serializable;
import java.util.Objects;

import com.github.example.entities.pk.OrderItemPK;

import jakarta.persistence.EmbeddedId;
import jakarta.persistence.Entity;
import jakarta.persistence.Table;

@Entity
@Table(name = "tb_order_item")
public class OrderItem implements Serializable{

	private static final long serialVersionUID = 1L;
	
	@EmbeddedId  //para id composto tenho que usar essa e não Id
	private OrderItemPK Id = new OrderItemPK(); //atributo identificador correspondente a chave primária
	
	private Integer quantity;
	private Double price;
	
	public OrderItem(){
		
	}
	//o order e product será atribuido ao item de pedido 
	public OrderItem(Order order, Product product, Integer quantity, Double price) { //não coloca o orderItem e só depoiis que coloca manualmente
		super();
		Id.setOrder(order);
		Id.setProduct(product);
		this.quantity = quantity;
		this.price = price;
	}

	public Order getOrder() {
		return this.getOrder();
	}
	
	public void setOrder(Order order) {
		Id.setOrder(order);
	}
	
	public Order getProduct() {
		return this.getProduct();
	}
	
	public void setProduct(Product product) {
		Id.setProduct(product);
	}
	
	public Integer getQuantity() {
		return quantity;
	}

	public void setQuantity(Integer quantity) {
		this.quantity = quantity;
	}

	public Double getPrice() {
		return price;
	}

	public void setPrice(Double price) {
		this.price = price;
	}

	@Override
	public int hashCode() {
		return Objects.hash(Id);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		OrderItem other = (OrderItem) obj;
		return Objects.equals(Id, other.Id);
	}
	
	
}
